package net.fluffybumblebee.quarkcrystals.item;

import net.fabricmc.fabric.api.client.itemgroup.FabricItemGroupBuilder;
import net.fluffybumblebee.quarkcrystals.util.ArrayDiscriminatorUtil;
import net.fluffybumblebee.quarkcrystals.util.IdentifierUtil;
import net.minecraft.item.ItemGroup;
import net.minecraft.item.ItemStack;
import net.minecraft.util.Identifier;

public class QCItems {
    public static void registerItems() {}
    public static final ItemGroup QUARK_CRYSTALS = FabricItemGroupBuilder.create(
            new Identifier(IdentifierUtil.ID, IdentifierUtil.ID))
                .icon(() -> new ItemStack(ArrayDiscriminatorUtil.getCorundum[4]))
                .appendItems(stacks -> {
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundum[1]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundum[2]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundum[3]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundum[4]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundum[5]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundum[6]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundum[7]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundum[8]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundum[9]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundum[10]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundum[11]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundum[12]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundum[13]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundum[14]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getWaxedCorundum[1]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getWaxedCorundum[2]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getWaxedCorundum[3]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getWaxedCorundum[4]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getWaxedCorundum[5]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getWaxedCorundum[6]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getWaxedCorundum[7]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getWaxedCorundum[8]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getWaxedCorundum[9]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getWaxedCorundum[10]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getWaxedCorundum[11]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getWaxedCorundum[12]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getWaxedCorundum[13]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getWaxedCorundum[14]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumPane[1]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumPane[2]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumPane[3]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumPane[4]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumPane[5]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumPane[6]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumPane[7]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumPane[8]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumPane[9]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumPane[10]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumPane[11]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumPane[12]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumPane[13]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumPane[14]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumStairs[1]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumStairs[2]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumStairs[3]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumStairs[4]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumStairs[5]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumStairs[6]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumStairs[7]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumStairs[8]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumStairs[9]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumStairs[10]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumStairs[11]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumStairs[12]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumStairs[13]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumStairs[14]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumSlab[1]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumSlab[2]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumSlab[3]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumSlab[4]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumSlab[5]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumSlab[6]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumSlab[7]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumSlab[8]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumSlab[9]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumSlab[10]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumSlab[11]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumSlab[12]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumSlab[13]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumSlab[14]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumCluster[1]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumCluster[2]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumCluster[3]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumCluster[4]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumCluster[5]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumCluster[6]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumCluster[7]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumCluster[8]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumCluster[9]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumCluster[10]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumCluster[11]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumCluster[12]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumCluster[13]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCorundumCluster[14]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystal[1]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystal[2]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystal[3]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystal[4]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystal[5]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystal[6]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystal[7]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystal[8]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystal[9]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystal[10]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystal[11]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystal[12]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystal[13]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystal[14]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystalPane[1]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystalPane[2]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystalPane[3]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystalPane[4]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystalPane[5]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystalPane[6]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystalPane[7]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystalPane[8]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystalPane[9]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystalPane[10]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystalPane[11]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystalPane[12]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystalPane[13]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystalPane[14]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystalStairs[1]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystalStairs[2]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystalStairs[3]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystalStairs[4]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystalStairs[5]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystalStairs[6]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystalStairs[7]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystalStairs[8]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystalStairs[9]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystalStairs[10]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystalStairs[11]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystalStairs[12]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystalStairs[13]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystalStairs[14]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystalSlab[1]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystalSlab[2]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystalSlab[3]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystalSlab[4]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystalSlab[5]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystalSlab[6]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystalSlab[7]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystalSlab[8]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystalSlab[9]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystalSlab[10]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystalSlab[11]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystalSlab[12]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystalSlab[13]));
                    stacks.add(new ItemStack(ArrayDiscriminatorUtil.getCrystalSlab[14]));
            })
            .build();
}
